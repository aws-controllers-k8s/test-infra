# Dockerfile for integration testing
ARG TEST_BASE_TAG
FROM $TEST_BASE_TAG as base

ARG DOCKER_VERSION=24.0.5
ENV DOCKER_VERSION=${DOCKER_VERSION}

RUN echo "Installing controller-gen v0.14.0..." \
    && go install "sigs.k8s.io/controller-tools/cmd/controller-gen@v0.14.0" \
    && mv $GOPATH/bin/controller-gen /usr/bin/controller-gen

RUN echo "Installing Kustomize ..." \
    && export KUSTOMIZE_TARBALL="kustomize.tar.gz" \
    && curl -fsSL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v4.1.2/kustomize_v4.1.2_linux_amd64.tar.gz --output "${KUSTOMIZE_TARBALL}" \
    && tar xzf "${KUSTOMIZE_TARBALL}" -C /usr/bin \
    && rm "${KUSTOMIZE_TARBALL}"

RUN echo "Installing Kubectl ... " \
    && echo "deb [signed-by=/usr/share/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list \
    && curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /usr/share/keyrings/kubernetes-apt-keyring.gpg \
    && apt-get update \
    && apt-get install -y kubectl

RUN echo "Installing Helm ... " \
    && export HELM_TARBALL="helm.tar.gz" \
    && curl -fsSL https://get.helm.sh/helm-v3.7.0-linux-amd64.tar.gz --output "${HELM_TARBALL}" \
    && tar xzf "${HELM_TARBALL}" --strip-components 1 -C /usr/bin \
    && rm "${HELM_TARBALL}"

RUN echo "Installing Docker ..." \
    && install -m 0755 -d /etc/apt/keyrings \
    && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg \
    && chmod a+r /etc/apt/keyrings/docker.gpg \
    && echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
    "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
    && apt-get update \
    && apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin \
    && rm -rf /var/lib/apt/lists/* \
    && sed -i 's/cgroupfs_mount$/#cgroupfs_mount\n/' /etc/init.d/docker \
    && sed -i 's/ulimit -Hn/# ulimit -Hn/g' /etc/init.d/docker \

RUN echo "Ensuring Legacy Iptables ..." \
    && update-alternatives --set iptables  /usr/sbin/iptables-legacy || true \
    && update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy || true \
    && update-alternatives --set arptables /usr/sbin/arptables-legacy || true

RUN echo "Installing Kind v0.19.0..." \
    && go install "sigs.k8s.io/kind@v0.19.0" \
    && mv $GOPATH/bin/kind /usr/bin/kind
