apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: prometheus
  namespace: flux-system
spec:
  interval: 1m0s
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: flux-system
spec:
  interval: 5m
  targetNamespace: prometheus
  values:
    kube-state-metrics:
      metricLabelsAllowlist: pods=[app,label_prow_k8s_io_id,label_prow_k8s_io_refs_repo,label_prow_k8s_io_type,label_prow_k8s_io_job,label_prow_k8s_io_refs_org]
    prometheus:
      prometheusSpec:
        additionalScrapeConfigs:
        - job_name: prow_tide
          static_configs:
          - targets: ["tide.prow.svc.cluster.local:9090"]
        - job_name: prow_plank
          static_configs:
          - targets: ["prow-controller-manager.prow.svc.cluster.local:9090"]
        - job_name: prow_hook
          static_configs:
          - targets: ["hook-metrics.prow.svc.cluster.local:9090"]
    additionalPrometheusRulesMap:
      # Taken from https://github.com/loodse/prow-dashboards
      prow-rules:
        groups:
        - name: prow
          rules:
          # These metrics are based on generic pods, not just Prow jobs.
          # group interesting information into a single metric
          # squash metrics from multiple kube-state-metrics pods
          # {namespace="...",pod="...",node="...",pod_ip="1.2.3.4",phase="..."} 1
          - record: prow:pod
            expr: |
              max by (namespace, pod, node, pod_ip) (kube_pod_info) *
                on (namespace, pod)
                group_left (phase)
                (kube_pod_status_phase{namespace="test-pods"} == 1)
          # all pending pods
          # {namespace="...",pod="...",node="...",pod_ip="1.2.3.4",phase="Pending"} 1
          - record: prow:pod:pending
            expr: prow:pod{phase="Pending"}

          # same for the pod creation time
          # {namespace="...",pod="...",node="...",pod_ip="1.2.3.4",phase="..."} [unix timestamp]
          - record: prow:pod:created_time
            expr: |
              prow:pod *
                on (namespace, pod)
                group_right (node, pod_ip, phase)
                max by (namespace, pod) (kube_pod_created)
          # time since a pod has been in pending phase
          # {namespace="...",pod="...",node="...",pod_ip="1.2.3.4",phase="Pending"} [unix timestamp]
          - record: prow:pod:pending_since_time
            expr: prow:pod:pending * prow:pod:created_time

          # These metrics are specific to Prow jobs.
          # This monster of a rule prepares a tidy list of jobs with their
          # namespace and pod name attached.
          # {namespace="...",pod="...",node="...",pod_ip="1.2.3.4",phase="...",org="...",repo="...",type="...",name="...",id="<UUID>"} 1
          - record: prow:job
            expr: |
              max by (org, repo, type, name, id, namespace, pod, phase, node, pod_ip) (
                label_replace(
                  label_replace(
                    label_replace(
                      label_replace(
                        label_replace(
                          prow:pod *
                            on (namespace, pod)
                            group_left (label_prow_k8s_io_id, label_prow_k8s_io_refs_repo, label_prow_k8s_io_type, label_prow_k8s_io_job, label_prow_k8s_io_refs_org)
                            kube_pod_labels{label_prow_k8s_io_id!=""},
                          "id",
                          "$0",
                          "label_prow_k8s_io_id",
                          ".*"
                        ),
                        "repo",
                        "$0",
                        "label_prow_k8s_io_refs_repo",
                        ".*"
                      ),
                      "type",
                      "$0",
                      "label_prow_k8s_io_type",
                      ".*"
                    ),
                    "name",
                    "$0",
                    "label_prow_k8s_io_job",
                    ".*"
                  ),
                  "org",
                  "$0",
                  "label_prow_k8s_io_refs_org",
                  ".*"
                )
              )
          # list of all pending pods
          # {namespace="...",pod="...",node="...",pod_ip="1.2.3.4",phase="Pending",org="...",repo="...",type="...",name="...",id="<UUID>"} 1
          - record: prow:job:pending
            expr: |
              prow:pod:pending *
                on (namespace, pod)
                group_left (org, repo, type, name, id)
                prow:job
          # time since a job has been in pending phase
          # {namespace="...",pod="...",node="...",pod_ip="1.2.3.4",phase="Pending",org="...",repo="...",type="...",name="...",id="<UUID>"} [unix timestamp]
          - record: prow:job:pending_since_time
            expr: |
              prow:pod:created_time *
                on (namespace, pod)
                group_left (org, repo, type, name, id)
                prow:job:pending
          # total memory used by a Prow job
          # {namespace="...",pod="...",node="...",pod_ip="1.2.3.4",phase="...",org="...",repo="...",type="...",name="...",id="<UUID>"} [bytes]
          - record: prow:job:memory_working_set_bytes
            expr: |
              sum by (namespace, pod, node, pod_ip) (container_memory_working_set_bytes{container="test"}) *
                on(namespace, pod)
                group_left(org, repo, type, name, id, node, pod_ip, phase)
                prow:job
          # total memory requests for a Prow job
          # {namespace="...",pod="...",node="...",pod_ip="1.2.3.4",phase="...",org="...",repo="...",type="...",name="...",id="<UUID>"} [bytes]
          - record: prow:job:resource_requests_memory_bytes
            expr: |
              sum by (namespace, pod, node, pod_ip) (kube_pod_container_resource_requests_memory_bytes{container="test"}) *
                on(namespace, pod)
                group_left(org, repo, type, name, id, node, pod_ip, phase)
                prow:job
          # total memory limit for a Prow job
          # {namespace="...",pod="...",node="...",pod_ip="1.2.3.4",phase="...",org="...",repo="...",type="...",name="...",id="<UUID>"} [bytes]
          - record: prow:job:resource_limits_memory_bytes
            expr: |
              sum by (namespace, pod, node, pod_ip) (kube_pod_container_resource_limits_memory_bytes{container="test"}) *
                on(namespace, pod)
                group_left(org, repo, type, name, id, node, pod_ip, phase)
                prow:job
          # total CPU used by a Prow job
          # {namespace="...",pod="...",node="...",pod_ip="1.2.3.4",phase="...",org="...",repo="...",type="...",name="...",id="<UUID>"} [seconds]
          - record: prow:job:cpu_usage_seconds_rate:1m
            expr: |
              sum by (namespace, pod, node, pod_ip) (rate(container_cpu_usage_seconds_total{container="test"}[1m])) *
                on(namespace, pod)
                group_left(org, repo, type, name, id, node, pod_ip, phase)
                prow:job
          # total CPU requests for a Prow job
          # {namespace="...",pod="...",node="...",pod_ip="1.2.3.4",phase="...",org="...",repo="...",type="...",name="...",id="<UUID>"} [cores]
          - record: prow:job:resource_requests_cpu_cores
            expr: |
              sum by (namespace, pod, node, pod_ip) (kube_pod_container_resource_requests_cpu_cores{container="test"}) *
                on(namespace, pod)
                group_left(org, repo, type, name, id, node, pod_ip, phase)
                prow:job
          # total CPU limit for a Prow job
          # {namespace="...",pod="...",node="...",pod_ip="1.2.3.4",phase="...",org="...",repo="...",type="...",name="...",id="<UUID>"} [cores]
          - record: prow:job:resource_limits_cpu_cores
            expr: |
              sum by (namespace, pod, node, pod_ip) (kube_pod_container_resource_limits_cpu_cores{container="test"}) *
                on(namespace, pod)
                group_left(org, repo, type, name, id, node, pod_ip, phase)
                prow:job
          # total CPU available on *worker* nodes
          # {node="..."} [cores]
          - record: prow:node:cpu_capacity_cores
            expr: |
              sum by (node) (kube_node_status_capacity_cpu_cores{node=~"worker-.*"})
          # total memory available on *worker* nodes
          # {node="..."} [bytes]
          - record: prow:node:memory_capacity_bytes
            expr: |
              sum by (node) (kube_node_status_capacity_memory_bytes{node=~"worker-.*"})
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 18.0.5
      sourceRef:
        kind: HelmRepository
        name: prometheus